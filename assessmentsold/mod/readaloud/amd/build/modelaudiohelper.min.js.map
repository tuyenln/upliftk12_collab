{"version":3,"sources":["../src/modelaudiohelper.js"],"names":["define","$","log","def","recorderhelper","karaoke","debug","controls","currentmode","breaks","goturl","cd","audioplayerclass","modelaudioplayerclass","wordclass","spaceclass","endspaceclass","passagecontainer","breaksfield","modelaudiobreaksfield","urlfield","modelaudiourlfield","modeltranscriptbutton","modeltranscript","init","props","theid","widgetid","configcontrol","get","opts","JSON","parse","value","remove","register_controls","register_events","markup_passage","init_recorder","init_karaoke","audiourl","audioplayer","attr","check_modelaudio_transcript_ready","karaoke_opts","set_breaks","that","on_recording_start","on_recording_end","on_audio_processing","eventdata","val","mediaurl","eachword","eachspace","clickhandler","wordnumber","parseInt","nextspace","hasClass","remove_break","removeClass","addClass","theplayer","audiotime","currentTime","register_break","click","hide","show","i","length","splice","stringify","push","space","player_get_time","waitms","ajax","url","method","cache","error","setTimeout","success","data","textStatus","xhr","status","load","do_transcription_complete"],"mappings":"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","sourcesContent":["define(['jquery', 'core/log','mod_readaloud/definitions','mod_readaloud/recorderhelper','mod_readaloud/modelaudiokaraoke'], function ($, log, def, recorderhelper, karaoke) {\n    \"use strict\"; // jshint ;_;\n    /*\n    This file helps you get Polly URLs at runtime\n     */\n\n    log.debug('Model Audio helper: initialising');\n\n    return {\n        controls: {},\n        currentmode: 'modeling', //previewing //stopped\n        breaks: [],\n        goturl: false,\n\n        //class definitions\n        cd: {\n            audioplayerclass: def.modelaudioplayerclass,\n            wordclass: def.wordclass,\n            spaceclass: def.spaceclass,\n            endspaceclass: def.endspaceclass,\n            passagecontainer: def.passagecontainer,\n            breaksfield: def.modelaudiobreaksfield,\n            urlfield: def.modelaudiourlfield,\n            modeltranscriptbutton: def.modeltranscriptbutton,\n            modeltranscript: def.modeltranscript\n\n        },\n\n        //init the module\n        init: function(props){\n\n            //pick up opts from html\n            var theid = '#amdopts_' + props.widgetid;\n            var configcontrol = $(theid).get(0);\n            if (configcontrol) {\n                var opts = JSON.parse(configcontrol.value);\n                $(theid).remove();\n            } else {\n                //if there is no config we might as well give up\n                log.debug('Read Aloud model audio Controller: No config found on page. Giving up.');\n                return;\n            }\n\n            if(opts.breaks) {\n                this.breaks=JSON.parse(opts.breaks);\n            }\n\n            //register the controls\n            this.register_controls();\n            //register the events\n            this.register_events();\n            //markup passage\n            this.markup_passage();\n            //load recorder\n            this.init_recorder(opts);\n\n            //init karaoke\n            this.init_karaoke();\n\n            //init model audio transcript check\n            var audiourl = this.controls.audioplayer.attr('src');\n            if(audiourl != null) {\n                this.check_modelaudio_transcript_ready(audiourl, 5000)\n            }\n        },\n\n        init_karaoke: function(){\n          var karaoke_opts={audioplayerclass: this.cd.audioplayerclass}\n          karaoke.init(karaoke_opts);\n          karaoke.set_breaks(this.breaks);\n        },\n\n        init_recorder: function(opts){\n            var that =this;\n            var on_recording_start=function(eventdata){\n                that.goturl=false;\n            };\n            var on_recording_end=function(eventdata){};\n            var on_audio_processing=function(eventdata){\n                if(!that.goturl) {\n                    that.controls.urlfield.val(eventdata.mediaurl);\n                    that.goturl = true;\n                }\n            };\n\n            //init the recorder\n            recorderhelper.init(opts,\n                on_recording_start,\n                on_recording_end,\n                on_audio_processing);\n        },\n\n        //load all the controls so we do not have to do it later\n        register_controls: function(){\n            this.controls.audioplayer = $('#' + this.cd.audioplayerclass);\n            this.controls.eachword = $('.' + this.cd.wordclass);\n            this.controls.eachspace = $('.' + this.cd.spaceclass);\n            this.controls.passagecontainer = $(\".\" + this.cd.passagecontainer);\n            this.controls.breaksfield = $(\"#\" + this.cd.breaksfield);\n            this.controls.urlfield = $(\"#\" + this.cd.urlfield);\n            this.controls.modeltranscript = $(\"#\" + this.cd.modeltranscript);\n            this.controls.modeltranscriptbutton = $(\"#\" + this.cd.modeltranscriptbutton);\n        },\n\n        //attach the various event handlers we need\n        register_events: function(){\n            var that = this;\n\n            var clickhandler = function () {\n\n                if (that.currentmode === 'modeling') {\n                    var wordnumber = parseInt($(this).attr('data-wordnumber'));\n                    var nextspace = $('#' + that.cd.spaceclass + '_' + wordnumber);\n                    if(nextspace.hasClass(that.cd.endspaceclass)){\n                        that.remove_break(wordnumber);\n                        nextspace.removeClass(that.cd.endspaceclass);\n                    }else {\n                        nextspace.addClass(that.cd.endspaceclass);\n                        var theplayer = that.controls.audioplayer[0];\n                        var audiotime = theplayer.currentTime;\n                        that.register_break(wordnumber, audiotime);\n                    }\n                }\n            };\n\n            //set break points\n            this.controls.eachword.click(clickhandler);\n            this.controls.eachspace.click(clickhandler);\n\n            this.controls.modeltranscriptbutton.click(function(){\n                $(this).hide();\n                that.controls.modeltranscript.show();\n            });\n        },\n        remove_break: function(wordnumber)\n        {\n            for(var i=0; i<this.breaks.length; i++) {\n                if(this.breaks[i].wordnumber==wordnumber){\n                    this.breaks.splice(i,1);\n                    break;\n                }\n            }\n            this.controls.breaksfield.val(JSON.stringify(this.breaks));\n            log.debug(this.breaks);\n        },\n\n        register_break: function(wordnumber, audiotime){\n            this.breaks.push({'wordnumber': wordnumber, 'audiotime': audiotime});\n            this.controls.breaksfield.val(JSON.stringify(this.breaks));\n            log.debug(this.breaks);\n        },\n\n        markup_passage: function(){\n            for(var i=0; i<this.breaks.length; i++) {\n                var wordnumber =this.breaks[i].wordnumber;\n                var space =$('#' + this.cd.spaceclass + '_' + wordnumber);\n                space.addClass(this.cd.endspaceclass);\n            }\n\n        },\n\n        player_get_time: function(){\n            var theplayer = this.controls.audioplayer[0];\n            return theplayer.currentTime;\n        },\n\n        check_modelaudio_transcript_ready: function(audiourl,waitms){\n            //we commence a series of ping and retries until the recorded file is available\n            var that = this;\n            $.ajax({\n                url: audiourl + '.txt',\n                method: 'HEAD',\n                cache: false,\n                error: function () {\n                    //We get here if its a 404 or 403. So settimout here and wait for file to arrive\n                    //we increment the timeout period each time to prevent bottlenecks\n                    log.debug('403 errors are normal here, till the file arrives back from transcriptoin');\n                    setTimeout(function () {\n                        that.check_modelaudio_transcript_ready(audiourl, waitms + 5000);\n                    }, waitms);\n                },\n                success: function (data, textStatus, xhr) {\n                    switch (xhr.status) {\n                        case 200:\n                            that.controls.modeltranscript.load(audiourl + '.txt');\n                            that.controls.modeltranscriptbutton.show();\n                            break;\n                        default:\n                            setTimeout(function () {\n                                that.check_modelaudio_transcript_ready(audiourl, waitms + 5000);\n                            }, waitms);\n                    }\n\n                }\n            });\n        },\n\n        do_transcription_complete: function(){\n\n        }\n\n    };//end of return value\n});"],"file":"modelaudiohelper.min.js"}